{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maxgs\\\\Documents\\\\Programa\\xE7\\xE3o\\\\BD\\\\cine-recomenda-ui\\\\src\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './HomePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [filmes, setFilmes] = useState([]);\n  useEffect(() => {\n    const buscarFilmes = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/filmes');\n        const data = await response.json();\n        setFilmes(data);\n      } catch (error) {\n        console.error(\"Erro ao buscar filmes:\", error);\n      }\n    };\n    buscarFilmes();\n  }, []);\n\n  // --- NOVA FUNÇÃO PARA ADICIONAR À LISTA ---\n  const handleAdicionarNaLista = async idFilme => {\n    // Nota: Em um app real, o idUsuario viria do contexto de login.\n    // Por agora, vamos usar o ID 1 como exemplo.\n    const idUsuario = 1;\n    const dados = {\n      idUsuario: idUsuario,\n      idFilme: idFilme,\n      estado: \"Quero Assistir\" // Estado padrão ao adicionar\n    };\n    try {\n      const response = await fetch('http://localhost:8080/listas', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dados)\n      });\n      if (response.ok) {\n        alert('Filme adicionado à sua lista com sucesso!');\n      } else {\n        alert('Erro ao adicionar filme à lista.');\n      }\n    } catch (error) {\n      console.error(\"Erro de conexão:\", error);\n      alert('Não foi possível conectar ao servidor.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"homepage-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CineRecomenda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sua lista de filmes definitiva.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"movie-grid\",\n      children: filmes.map(filme => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/filmes/${filme.idFilme}`,\n          className: \"movie-card-link\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: filme.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Lan\\xE7amento:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 28\n          }, this), \" \", new Date(filme.anoLanc).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Dura\\xE7\\xE3o:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 28\n          }, this), \" \", filme.duracao]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAdicionarNaLista(filme.idFilme),\n          className: \"add-list-button\",\n          children: \"Adicionar \\xE0 Lista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, filme.idFilme, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"mlITzQxJyQ99oG5kGQLCPDPL7aw=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","HomePage","_s","filmes","setFilmes","buscarFilmes","response","fetch","data","json","error","console","handleAdicionarNaLista","idFilme","idUsuario","dados","estado","method","headers","body","JSON","stringify","ok","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","filme","to","nome","Date","anoLanc","toLocaleDateString","duracao","onClick","_c","$RefreshReg$"],"sources":["C:/Users/maxgs/Documents/Programação/BD/cine-recomenda-ui/src/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './HomePage.css';\r\n\r\nfunction HomePage() {\r\n    const [filmes, setFilmes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const buscarFilmes = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:8080/filmes');\r\n                const data = await response.json();\r\n                setFilmes(data);\r\n            } catch (error) {\r\n                console.error(\"Erro ao buscar filmes:\", error);\r\n            }\r\n        };\r\n        buscarFilmes();\r\n    }, []);\r\n\r\n    // --- NOVA FUNÇÃO PARA ADICIONAR À LISTA ---\r\n    const handleAdicionarNaLista = async (idFilme) => {\r\n        // Nota: Em um app real, o idUsuario viria do contexto de login.\r\n        // Por agora, vamos usar o ID 1 como exemplo.\r\n        const idUsuario = 1;\r\n\r\n        const dados = {\r\n            idUsuario: idUsuario,\r\n            idFilme: idFilme,\r\n            estado: \"Quero Assistir\" // Estado padrão ao adicionar\r\n        };\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8080/listas', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(dados)\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert('Filme adicionado à sua lista com sucesso!');\r\n            } else {\r\n                alert('Erro ao adicionar filme à lista.');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erro de conexão:\", error);\r\n            alert('Não foi possível conectar ao servidor.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"homepage-container\">\r\n            <header className=\"homepage-header\">\r\n                <h1>CineRecomenda</h1>\r\n                <p>Sua lista de filmes definitiva.</p>\r\n            </header>\r\n\r\n            <main className=\"movie-grid\">\r\n                {filmes.map(filme => (\r\n                    <div key={filme.idFilme} className=\"movie-card\">\r\n                        {/* O Link agora envolve apenas o título para ir aos detalhes */}\r\n                        <Link to={`/filmes/${filme.idFilme}`} className=\"movie-card-link\">\r\n                            <h2>{filme.nome}</h2>\r\n                        </Link>\r\n                        <p><strong>Lançamento:</strong> {new Date(filme.anoLanc).toLocaleDateString()}</p>\r\n                        <p><strong>Duração:</strong> {filme.duracao}</p>\r\n\r\n                        {/* --- NOVO BOTÃO --- */}\r\n                        <button onClick={() => handleAdicionarNaLista(filme.idFilme)} className=\"add-list-button\">\r\n                            Adicionar à Lista\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}