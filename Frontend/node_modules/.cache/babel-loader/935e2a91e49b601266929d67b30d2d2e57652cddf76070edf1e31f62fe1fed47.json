{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maxgs\\\\Documents\\\\Programa\\xE7\\xE3o\\\\BD\\\\cine-recomenda-ui\\\\src\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './HomePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [filmes, setFilmes] = useState([]);\n  const [minhaListaIds, setMinhaListaIds] = useState(new Set());\n  const idUsuario = 1;\n  useEffect(() => {\n    // ... (código useEffect continua o mesmo) ...\n  }, [idUsuario]);\n  const handleAdicionarNaLista = async idFilme => {\n    // ... (função de adicionar continua a mesma) ...\n  };\n\n  // --- NOVA FUNÇÃO PARA REMOVER DA LISTA ---\n  const handleRemoverDaLista = async idFilme => {\n    try {\n      const response = await fetch(`http://localhost:8080/listas?idUsuario=${idUsuario}&idFilme=${idFilme}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        alert('Filme removido da sua lista.');\n        // ATUALIZA O ESTADO LOCALMENTE para feedback instantâneo\n        setMinhaListaIds(prevIds => {\n          const novosIds = new Set(prevIds);\n          novosIds.delete(idFilme);\n          return novosIds;\n        });\n      } else {\n        alert('Erro ao remover filme da lista.');\n      }\n    } catch (error) {\n      console.error(\"Erro de conexão:\", error);\n      alert('Não foi possível conectar ao servidor.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage-container\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"movie-grid\",\n      children: filmes.map(filme => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/filmes/${filme.idFilme}`,\n          className: \"movie-card-link\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: filme.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Lan\\xE7amento:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 28\n          }, this), \" \", new Date(filme.anoLanc).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Dura\\xE7\\xE3o:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 28\n          }, this), \" \", filme.duracao]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), minhaListaIds.has(filme.idFilme) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"na-lista-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"na-lista-texto\",\n            children: \"\\u2714 Na sua Lista\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoverDaLista(filme.idFilme),\n            className: \"remove-list-button\",\n            children: \"Remover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAdicionarNaLista(filme.idFilme),\n          className: \"add-list-button\",\n          children: \"Adicionar \\xE0 Lista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)]\n      }, filme.idFilme, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"3nF13rkSz4HRRucClLDgTPjx0V8=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","HomePage","_s","filmes","setFilmes","minhaListaIds","setMinhaListaIds","Set","idUsuario","handleAdicionarNaLista","idFilme","handleRemoverDaLista","response","fetch","method","ok","alert","prevIds","novosIds","delete","error","console","className","children","map","filme","to","nome","fileName","_jsxFileName","lineNumber","columnNumber","Date","anoLanc","toLocaleDateString","duracao","has","onClick","_c","$RefreshReg$"],"sources":["C:/Users/maxgs/Documents/Programação/BD/cine-recomenda-ui/src/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './HomePage.css';\r\n\r\nfunction HomePage() {\r\n    const [filmes, setFilmes] = useState([]);\r\n    const [minhaListaIds, setMinhaListaIds] = useState(new Set());\r\n    const idUsuario = 1;\r\n\r\n    useEffect(() => {\r\n        // ... (código useEffect continua o mesmo) ...\r\n    }, [idUsuario]);\r\n\r\n    const handleAdicionarNaLista = async (idFilme) => {\r\n        // ... (função de adicionar continua a mesma) ...\r\n    };\r\n\r\n    // --- NOVA FUNÇÃO PARA REMOVER DA LISTA ---\r\n    const handleRemoverDaLista = async (idFilme) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/listas?idUsuario=${idUsuario}&idFilme=${idFilme}`, {\r\n                method: 'DELETE'\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert('Filme removido da sua lista.');\r\n                // ATUALIZA O ESTADO LOCALMENTE para feedback instantâneo\r\n                setMinhaListaIds(prevIds => {\r\n                    const novosIds = new Set(prevIds);\r\n                    novosIds.delete(idFilme);\r\n                    return novosIds;\r\n                });\r\n            } else {\r\n                alert('Erro ao remover filme da lista.');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erro de conexão:\", error);\r\n            alert('Não foi possível conectar ao servidor.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"homepage-container\">\r\n            {/* ... seu header ... */}\r\n            <main className=\"movie-grid\">\r\n                {filmes.map(filme => (\r\n                    <div key={filme.idFilme} className=\"movie-card\">\r\n                        <Link to={`/filmes/${filme.idFilme}`} className=\"movie-card-link\">\r\n                            <h2>{filme.nome}</h2>\r\n                        </Link>\r\n                        <p><strong>Lançamento:</strong> {new Date(filme.anoLanc).toLocaleDateString()}</p>\r\n                        <p><strong>Duração:</strong> {filme.duracao}</p>\r\n\r\n                        {/* --- LÓGICA ATUALIZADA PARA O BOTÃO --- */}\r\n                        {minhaListaIds.has(filme.idFilme) ? (\r\n                            <div className=\"na-lista-container\">\r\n                                <span className=\"na-lista-texto\">✔ Na sua Lista</span>\r\n                                <button onClick={() => handleRemoverDaLista(filme.idFilme)} className=\"remove-list-button\">\r\n                                    Remover\r\n                                </button>\r\n                            </div>\r\n                        ) : (\r\n                            <button onClick={() => handleAdicionarNaLista(filme.idFilme)} className=\"add-list-button\">\r\n                                Adicionar à Lista\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}